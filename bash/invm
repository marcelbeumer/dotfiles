#!/bin/bash

export INREPOS_VM=/code
export INREPOS_HOST=~/Development/Clones/Internations
if [ "$(uname)" == "Darwin" ]; then
    export INREPOS=$INREPOS_HOST
else
    export INREPOS=$INREPOS_Vm
fi

# --------------
in_env() {
    if [ "$(uname)" == "Darwin" ]; then
        echo "mac"
    else
        echo "linux"
    fi
}

# Should probably be different check
# but works for me
in_within_vm() {
    if [ $(in_env) != "linux" ]; then
        echo "not within vm";
        return 1;
    fi
}

# Should probably be different check
# but works for me
in_within_host() {
    if [ $(in_env) != "mac" ]; then
        echo "not within mac"
        return 1;
    fi
}

in_in() {
    cd $INREPOS/in;
    echo "(in_in) Changed to $INREPOS/in"
}

in_oms() {
    cd $INREPOS/in-oms;
    echo "(in_oms) Changed to $INREPOS/in-oms"
}

in_solr() {
    cd $INREPOS/in-solr;
    echo "(in_solr) Changed to $INREPOS/in-solr"
}

# Git pull on all repos
in_pull() {
    in_within_host || return 1;
    pwd=$PWD
    echo "(in_pull) Pulling all repos"
    in_in && git pull;
    in_oms && git pull;
    in_solr && git pull;
    cd $pwd
}

in_rebuild() {
    in_within_vm || return 1;
    echo "TODO: ant, assets, ..."
}

in_refresh() {
    echo "TODO: ant (in/oms/solr), clear caches, rebuild,restart_servers"
}

in_full_update() {
    in_pull && in_refresh
}

in_restart_all() {
    echo "TODO:"
}

in_watch() {
    echo "TODO:"
}
# --------------

cd_in_oms() {
    cd /code/in-oms;
}

cd_in() {
    cd /code/in;
}

app_console() {
    cd_in
    php app-new/console $@
}

single_buster_test() {
    cd_in
    buster-test --config static/javascript/test/buster.js --reporter specification -t static/javascript/test/$1_test.js
}

rebuild_frontend() {
    cd_in
    php app-new/console assets:install static && php app-new/console assetic:dump .
}

watch_frontend() {
    cd_in
    php app-new/console assetic:dump . --force --watch
}

restart_servers() {
    # /etc/init.d/redis-server restart
    /etc/init.d/memcached restart
    /etc/init.d/nginx restart
    /etc/init.d/tomcat6 restart
    /etc/init.d/php5-fpm restart
}

tail_php_log() {
    tail -f /var/log/php.log
}

fix_in_caches() {
    $(cd_in; chmod -R 777 app-new/cache/dev; chmod -R 777 cache);
}

clear_magento_cache() {
    cd_in_oms;
    php magerun.phar cache:clean && php magerun.phar cache:flush && rm /tmp/wsdl-*
}
