#!/bin/bash

# --------------
in_env() {
    if [ "$(uname)" == "Darwin" ]; then
        printf "host"
    else
        printf "vm"
    fi
}

# Should probably be different check
# but works for me
in_within_vm() {
    if [ $(in_env) != "vm" ]; then
        echo "Not within VM";
        return 1;
    fi
}

# Should probably be different check
# but works for me
in_within_host() {
    if [ $(in_env) != "host" ]; then
        echo "Not within host machine"
        return 1;
    fi
}

in_staff() {
    ssh root@staff.internations.org
}

in_vm() {
    ssh root@internations.dev
}

in_in() {
    cd $INREPOS/in;
}

in_src() {
    cd $INREPOS/in/app-new/src;
}

in_oms() {
    cd $INREPOS/in-oms;
}

in_solr() {
    cd $INREPOS/in-solr;
}

in_fix_permissions() {
    in_within_host || return 1;
    echo "(Fixing permissions will use sudo)"
    pwd=$PWD
    in_in
    echo "Setting permissions from in_in..."

    echo "sudo chown -R marcel ."
    sudo chown -R marcel .

    echo "sudo chmod -R 777 app-new/cache/dev"
    sudo chmod -R 777 app-new/cache/dev;

    echo "sudo chmod -R 777 cache;"
    sudo chmod -R 777 cache;

    echo "sudo chmod -R 777 web/static/assetic"
    sudo chmod -R 777 web/static/assetic

    echo "sudo chmod -R 777 /dev/shm/symfony"
    sudo chmod -R 777 /dev/shm/symfony

    echo "Done."
    cd $pwd
}

in_tags_vendor() {
    in_within_host || return 1;
    pwd=$PWD
    in_in
    ctags --languages=js -R -f tags.vendor.js vendor
    ctags --languages=php -R -f tags.vendor.php vendor
    cd $pwd
}

in_tags_app() {
    in_within_host || return 1;
    pwd=$PWD
    in_in
    ctags --languages=js,php -R -f tags app-new/src
    ctags --languages=js -R -f tags.js app-new/src
    ctags --languages=php -R -f tags.php app-new/src
    cd $pwd
}

in_tags() {
    in_within_host || return 1;
    # in_tags_vendor
    in_tags_app
}

# Git pull on all repos
in_pull() {
    in_within_host || return 1;
    pwd=$PWD
    echo "Pulling all repos..."
    echo "Pulling in:"
    in_in && git pull --rebase
    echo "Pulling oms:"
    in_oms && git pull --rebase
    echo "Pulling solr:"
    in_solr && git pull --rebase
    cd $pwd
    echo "Updating tags (app only):"
    in_tags_app
    echo "Done."
}

in_rebuild() {
    in_within_vm || return 1;
    echo "Rebuild..."
    pwd=$PWD
    echo "Rebuilding frontend resources"
    echo "Copy assets:"
    in_in && php composer/copy-assets.php
    echo "Assetic:"
    in_rebuild_assetic
    echo "Ant:"
    in_in && ant
    in_oms && ant clean setup
    in_solr && ant
    cd $pwd
}

in_rebuild_assetic() {
    in_within_vm || return 1;
    in_clear_assetic
    in_in && php app-new/console assets:install web/static && php app-new/console assetic:dump web --force
}

in_clear_assetic() {
    in_within_vm || return 1;
    in_in && rm -rf web/static/assetic/*
}

in_clear_caches() {
    in_within_vm || return 1;
    pwd=$PWD
    in_in
    rm -rf app-new/cache/dev/*
    rm -rf app-new/cache/test/*
    rm -rf /dev/shm/symfony/*
    chmod -R 777 /dev/shm/symfony
    rm -rf cache/*
    rm -rf /tmp/wsdl--*
    in_oms;
    # php magerun.phar cache:clean
    # php magerun.phar cache:flush
    rm -f /tmp/wsdl-*
    cd $pwd;
}

in_clear_logs() {
    in_within_vm || return 1;
    pwd=$PWD
    in_in
    rm -f app-new/logs/*.log
    rm -f /var/log/mysql/*
    rm -f /var/log/nginx/*
    rm -f /var/log/php*
    cd $pwd;
}

in_clear() {
    in_within_vm || return 1;
    in_clear_logs
    in_clear_assetic
    in_clear_caches
}

in_restart_php() {
    in_within_vm || return 1;
    /etc/init.d/php5-fpm restart
}

in_restart() {
    in_within_vm || return 1;
    echo "Restarting servers..."
    /etc/init.d/memcached restart
    /etc/init.d/redis-server restart
    /etc/init.d/mysql restart
    /etc/init.d/nginx restart
    /etc/init.d/tomcat6 restart
    in_restart_php
}

in_refresh() {
    in_within_vm || return 1;
    echo "Doing full refresh..."
    in_clear_caches
    in_rebuild
    in_restart
    echo "Full refresh done."
}

in_watch() {
    in_within_vm || return 1;
    in_in && php app-new/console assetic:dump web --force --watch
}

in_console() {
    in_within_vm || return 1;
    in_in
    php app-new/console $@
}

in_logs() {
    tail -f /var/log/php.log
}

in_phpunit() {
    in_within_vm || return 1;
    in_in
    phpunit --verbose --colors --debug $@
}

in_phpcheckstyle() {
    in_within_vm || return 1;
    in_in
    vendor/bin/phpcs --report=checkstyle --report-file=build/logs/php-checkstyle.xml --standard=ruleset.xml $@
}

in_behat() {
    in_within_vm || return 1;
    in_in && vendor/behat/behat/bin/behat $@
}

in_sahi() {
    printf "Running sahi within %s...\n" "$(in_env)"
    in_in
    cd sahi/bin
    ./sahi.sh
}

in_rebuild_requirejs() {
    in_within_vm || return 1;
    pwd=$PWD
    in_in; cd web; node ../util/requirejs/build-assets.js
    cd $pwd
}

export INREPOS_VM=/code
export INREPOS_HOST=~/Development/Clones/Internations
if [ $(in_env) == "host" ]; then
    export INREPOS=$INREPOS_HOST
else
    export INREPOS=$INREPOS_VM
fi
# --------------
