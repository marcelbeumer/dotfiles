#!/bin/bash

# Prints which env we are currently in, the Mac host or inside the VM
in_env() {
    if [ "$(uname)" == "Darwin" ]; then
        printf "host"
    else
        printf "vm"
    fi
}

# Should probably be different check
# but works for me
in_within_vm() {
    if [ $(in_env) != "vm" ]; then
        echo "Not within VM";
        return 1;
    fi
}

# Should probably be different check
# but works for me
in_within_host() {
    if [ $(in_env) != "host" ]; then
        echo "Not within host machine"
        return 1;
    fi
}

# Log into my vm
in_vm() {
    ssh root@internations.dev
}

# Chdir into app repos
in_app() {
    cd $INREPOS/in;
}

# Chdir app src dir
in_src() {
    cd $INREPOS/in/app-new/src;
}

# Chdir in oms repos
in_oms() {
    cd $INREPOS/in-oms;
}

# Chdir in cms repos
in_cms() {
    cd $INREPOS/in-cms;
}

# Chdir in solr repos
in_solr() {
    cd $INREPOS/in-solr;
}

# Rebuild ctags file
in_tags() {
    in_within_host || return 1;
    in_app
    ctags -R -f tags app-new/src
}

# Git pull on all repos
in_pull() {
    in_within_host || return 1;
    echo "Pulling in:"
    in_app && git pull --rebase
    echo "Pulling oms:"
    in_oms && git pull --rebase
    echo "Pulling cms:"
    in_cms && git pull --rebase
    echo "Pulling solr:"
    in_solr && git pull --rebase
    echo "Updating tags:"
    in_tags
    echo "Done."
}

# Rebuild everything (assets, app, oms and solr)
in_rebuild() {
    in_within_vm || return 1;
    # in_rebuild_assetic
    in_app && ant
    in_oms && ant clean setup
    in_solr && ant
    chmod -R 777 /dev/shm/symfony
}

in_rebuild_assets() {
    in_within_vm || return 1;
    in_app && php app-new/console assets:install web/static
}

# Clear all caches
in_clear_caches() {
    in_within_vm || return 1;
    in_app
    rm -rf /dev/shm/symfony/*/cache
    rm -rf /tmp/wsdl-*
}

# Clear all log files
in_clear_logs() {
    in_within_vm || return 1;
    in_app
    rm -rf /dev/shm/symfony/*/logs
    rm -f app-new/logs/*.log
    rm -f /var/log/mysql/*
    rm -f /var/log/nginx/*
    rm -f /var/log/php*
}

# Clear all logs, assets and caches
in_clear() {
    in_within_vm || return 1;
    in_clear_logs
    in_clear_assetic
    in_clear_caches
}

# Restart all servers
in_restart() {
    in_within_vm || return 1;
    echo "Restarting servers..."
    /etc/init.d/php5-fpm restart
    /etc/init.d/memcached restart
    /etc/init.d/mysql restart
    /etc/init.d/nginx restart
    /etc/init.d/tomcat6 restart
    /etc/init.d/redis-server restart
    /etc/init.d/rabbitmq-server restart
}

# Clear, rebuild and restart all (complete refresh!)
in_refresh() {
    in_within_vm || return 1;
    echo "Doing full refresh..."
    in_clear_caches
    in_rebuild
    in_restart
    echo "Full refresh done."
}

# Start assetic watcher
in_watch() {
    in_within_vm || return 1;
    in_app && php app-new/console assetic:dump web --force --watch
}

# Run new app console
in_console() {
    in_within_vm || return 1;
    in_app
    php app-new/console $@
}

# Show all available twig functions
in_twig_functions() {
    in_within_vm || return 1;
    in_app
    php app-new/console twig:debug:dump-functions
}

# Tail php logs
in_logs() {
    tail -f /var/log/php.log
}

# Run phpunit
in_phpunit() {
    in_within_vm || return 1;
    phpunit --verbose --colors --debug $@
}

# Run phpcs on app
in_phpcheckstyle() {
    in_within_vm || return 1;
    in_app
    vendor/bin/phpcs --report=checkstyle --report-file=build/logs/php-checkstyle.xml --standard=ruleset.xml $@
}

# Run behat
in_behat() {
    in_within_vm || return 1;
    in_app && vendor/behat/behat/bin/behat $@
}

# Run sahi
in_sahi() {
    printf "Running sahi within %s...\n" "$(in_env)"
    in_app
    cd sahi/bin
    ./sahi.sh
}

# Rebuild requirejs optimized files
in_rebuild_requirejs() {
    in_within_vm || return 1;
    in_app
    cd web
    node ../util/requirejs/build-assets.js
}

export INREPOS_VM=/code
export INREPOS_HOST=~/Development/Clones/Internations

if [ $(in_env) == "host" ]; then
    export INREPOS=$INREPOS_HOST
else
    export INREPOS=$INREPOS_VM
fi
